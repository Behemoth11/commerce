import axios from "axios";
import MyLink from "../component/MyLink";
import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/LandingPage.module.css";
import ProductListGrid from "../component/ProductList-grid";
import ProductListFlex from "../component/ProductList-flex";

const REPRESENTATIONS = [
  "women",
  "men",
  "pant",
  "women men",
  "utilities",
  "women love",
  "spoons",
  "ustensils",
];

const getUrl = (array) => {
  const query = array.map((element) => `representation=${element}`);
  return query.join("&");
};

type responseData = {
  more: boolean;
  products: [];
  error: [];
};

export default function Home() {
  console.log(process.env);
  const [discoverData, setDiscoverData] = useState(
    Array.from({ length: 10 }).map((e) => ({ representation: "nothing" }))
  );
  const [gridData, setGridData] = useState(
    Array.from({ length: 10 }).map((e) => ({ price: 100 }))
  );

  const [recentProductData, setRecentProductData] = useState(
    Array.from({ length: 10 }).map((e) => ({ price: 100 }))
  );

  useEffect(() => {
    const FIELD =
      "field=pr_image_url&field=description&field=productName&field=representation";
    const getRepresentation = async () => {
      // @ts-ignore
      const response_representation = await axios
        .get(`/api/product/representation?representation=all&${FIELD}&limit=4`)
        .catch((err) => console.log(err));

      let representations: responseData = {
        products: [],
        error: [],
        more: false,
      };

      let products_representations = [];

      if (response_representation) {
        representations = response_representation.data;
        products_representations = representations.products;
        if (products_representations.length < 3) {
          const more_representations = await axios
            .get(
              `/api/product/representation?${getUrl(
                REPRESENTATIONS
              )}&field=pr_image_url&field=description&field=productName&field=representation`
            )
            .catch((err) => console.log(err));
          if (more_representations) {
            // console.log("the more ", more_representations.data.products)
            products_representations = products_representations.concat(
              more_representations.data.products
            );
          }
        }
      }

      // console.log(products_representations)
      setDiscoverData(products_representations);
    };

    const getHotDeals = async () => {
      let hot_deals: responseData = {
        products: [],
        error: [],
        more: false,
      };
      const response_hotdeals = await axios
        .get(`/api/product?representation=hot deals&${FIELD}`)
        .catch((err) => console.log(err));

      if (response_hotdeals) {
        const hot_deals = response_hotdeals.data;
        if (hot_deals.products.length === 0) {
          setGridData(null);
        } else {
          setGridData(hot_deals.products);
        }
      }
    };

    const getRecent = async () => {
      let recentData: responseData = {
        products: [],
        error: [],
        more: false,
      };
      const response_recentData = await axios
        .get(`/api/product?${FIELD}&field=price&limit=20`)
        .catch((err) => console.log(err));

      if (response_recentData) {
        const recentData = response_recentData.data;
        if (recentData.products.length === 0) {
          setRecentProductData(null);
        } else {
          setRecentProductData(recentData.products);
        }
      }
    };
    getRecent();
    getHotDeals();
    getRepresentation();
  }, []);

  return (
    <div
      className={`${styles.landingPage} big-container`}
      style={{ fontSize: "0.8em" }}
    >
      <Head>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <title>buy goods in Gabons</title>
      </Head>

      <div className={styles.imageContainer}>
        <div className={styles.landingImages}>
          <picture>
            <source
              media="(min-width: 700px)"
              srcSet="https://res.cloudinary.com/dkoatnxem/image/upload/ar_2,c_crop/c_scale,w_1000/v1634645262/chris-ainsworth-tIUXSj2iFVY-unsplash_zlgadf.jpg"
            />
            <source
              media="(min-width: 470px)"
              srcSet="https://res.cloudinary.com/dkoatnxem/image/upload/ar_1.4,c_crop/c_scale,w_800/v1635785732/istockphoto-1254508881-170667a_imegeh.jpg 600w"
            />
            <source srcSet="https://res.cloudinary.com/dkoatnxem/image/upload/v1635785618/photo-1560769629-975ec94e6a86_u1flvd.jpg 600w" />
            <img
              src="https://res.cloudinary.com/dkoatnxem/image/upload/v1635785618/photo-1560769629-975ec94e6a86_u1flvd.jpg "
              alt=""
            />
          </picture>
        </div>
        <button>
          <MyLink href={"/find?categories=women"}>
            Shop Women # This is dep 2
          </MyLink>
        </button>
        <button>
          <MyLink href={"/find?categories=men"}>Shop Men</MyLink>
        </button>
        <button>
          <MyLink href={"/find?categories=kids"}>Shop Kid</MyLink>
        </button>
      </div>

      <div className={styles.discover}>
        <h3>Our Products</h3>
        <ProductListFlex items={discoverData} />
      </div>

      {gridData && (
        <div className={styles.proposition}>
          <h3>HOT DEALS</h3>
          <ProductListGrid
            displayType="single"
            aspect_ratio={120}
            items={gridData}
          />
        </div>
      )}

      {recentProductData && (
        <div className={styles.new}>
          <h3>Recent arrival</h3>
          <ProductListGrid
            displayType="double"
            aspect_ratio={120}
            items={recentProductData}
          />
        </div>
      )}
    </div>
  );
}
